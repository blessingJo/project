package com.opule.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

//user name is already used in sql

@Entity
@NamedQueries ({
	@NamedQuery(name = "Users.findAll", query = "SELECT u FROM Users u ORDER BY u.fullName"),// : colon indicates a placeholder for a parameter - :email is defined in UserDAO
	@NamedQuery(name = "Users.countAll", query = "SELECT Count(*) FROM Users u"),
	// colon indicates defined parameter
	@NamedQuery(name = "Users.findByEmail", query = "SELECT u FROM Users u WHERE u.email = :email")


})
//@Table(name = "table name") only used if the class name is diff to table name in db
public class Users {
	
	private Integer userId;
	private String email;
	private String fullName;
	private String password;
	
	public Users() {
	
	} 
	
	public Users(String email, String fullName, String password) {
		super();
		this.email = email;
		this.fullName = fullName;
		this.password = password;
	}
	
	public Users(Integer userId, String email, String fullName, String password) {
		this(email,fullName,password);
		this.userId = userId;
	}
	//another overload constructor that accepts updated user 

	@Column(name = "user_id")
	@Id
	//Unique values generated by the database
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public Integer getUserId() {
		return userId;
	}
	
	public void setUserId(Integer userId) {
		this.userId = userId;
	}
	
	public String getEmail() {
		return email;
	}
	
	public void setEmail(String email) {
		this.email = email;
	}
	
	@Column(name = "full_name")
	public String getFullName() {
		return fullName;
	}
	
	public void setFullName(String fullName) {
		this.fullName = fullName;
	}
	
	public String getPassword() {
		return password;
	}
	
	public void setPassword(String password) {
		this.password = password;
	} 
	

}
